{"version":3,"sources":["C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.component.html","C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.component.ts","C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.module.ts","C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.routing.ts"],"names":[],"mappings":"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","file":"login.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card-group\\\">\\n          <div class=\\\"card p-4\\\">\\n            <div class=\\\"card-body\\\">\\n              <h1>Login</h1>\\n              <form [formGroup]=\\\"form\\\" novalidate (ngSubmit)=\\\"onNgSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"icon-user\\\"></i></span>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n                  </div>\\n                  <span style=\\\"color: red\\\" *ngIf=\\\"formErrors.username\\\">{{formErrors.username}}</span>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n                  </div>\\n                  <span style=\\\"color: red\\\" *ngIf=\\\"formErrors.password\\\">{{formErrors.password}}</span>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-6\\\">\\n                    <input [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary px-4\\\" value=\\\"Login\\\"/>\\n                  </div>\\n                  <div class=\\\"col-6 text-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Forgot password?</button>\\n                  </div>\\n                  <div class=\\\"col-6\\\" *ngIf=\\\"loginError\\\">\\n                    <span style=\\\"color: red\\\">{{loginError}}</span>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = login.module","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationService} from '../security/authentication.service';\nimport {Router} from '@angular/router';\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap\";\nimport {ModalComponent} from \"../shared/modals/modal.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  private formBuilder: FormBuilder;\n  private authService: AuthenticationService;\n  private router: Router;\n  private userDto: UserDto;\n  private bsModalRef: BsModalRef;\n  private bsModalService: BsModalService;\n  form: FormGroup;\n\n  loginError = '';\n  formErrors = {\n    'username': '',\n    'password': ''\n  };\n\n  validationMessages = {\n    'username': {\n      'required': 'Required'\n    },\n    'password': {\n      'required': 'Required'\n    }\n  };\n\n  constructor(authService: AuthenticationService, formBuilder: FormBuilder, router: Router, modalService: BsModalService) {\n\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.userDto = new UserDto();\n    this.bsModalService = modalService;\n\n    this.form = this.formBuilder.group({\n      'username': [\n        this.userDto.username,\n        Validators.required\n      ],\n      'password': [\n        this.userDto.password,\n        Validators.required\n      ]\n    });\n\n    /**\n     * Trigger validation on form data change\n     */\n    this.form.valueChanges.subscribe((data) => {\n      this.onDataChanged(data);\n    });\n    this.onDataChanged();\n  }\n\n  /**\n   * forward to dashboard page if the user is authenticated\n   */\n  ngOnInit() {\n    if (this.authService.tokenCheck()) {\n      this.router.navigate(['/dashboard']);\n      return;\n    }\n  }\n\n  /**\n   * Login\n   */\n  onNgSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.userDto = this.form.value;\n    this.authService.getToken(this.userDto.username, this.userDto.password).subscribe(\n      (result: boolean) => {\n        if (result) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.loginError = 'Username/password not valid';\n        }\n      },\n      (error: HttpErrorResponse) => {\n        if(error.status === 400) {\n          this.loginError = 'Username/password not valid';\n        } else {\n          this.openModal('Error', `${error.statusText}: ${error.message}`, 'modal-danger');\n        }\n      }\n    );\n  }\n\n  /**\n   * Open a modal dialog\n   * @param {string} title\n   * @param {string} body\n   * @param {string} cssClass\n   */\n  private openModal(title: string, body: string, cssClass: string) {\n    this.bsModalRef = this.bsModalService.show(ModalComponent);\n    this.bsModalRef.content.modalTitle = title;\n    this.bsModalRef.content.modalClass = cssClass;\n    this.bsModalRef.content.modalText = body;\n  }\n\n  /**\n   * Setup the error messages\n   * @param data\n   */\n  private onDataChanged(data?: any) {\n    if (!this.form) {\n      return;\n    }\n\n    const _form = this.form;\n\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        const control = _form.get(field);\n        this.formErrors[field] = '';\n\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) {\n            if (control.errors.hasOwnProperty(key)) {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nclass UserDto {\n  username: string;\n  password: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.component.ts","import {NgModule} from '@angular/core';\n\nimport {LoginComponent} from './login.component';\nimport {LoginRoutingModule} from './login.routing';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from \"../shared/shared.module\";\nimport {ModalModule} from \"ngx-bootstrap/modal\";\nimport {ModalComponent} from \"../shared/modals/modal.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    SharedModule\n  ],\n  declarations: [LoginComponent],\n  entryComponents: [ModalComponent]\n})\nexport class LoginModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {LoginComponent} from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    data: {\n      title: 'Login'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/shams/Documents/MyProjects/BoltJwt/web/src/app/login/login.routing.ts"],"sourceRoot":"webpack:///"}